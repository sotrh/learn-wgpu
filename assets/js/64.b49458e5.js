(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{494:function(e,o,t){"use strict";t.r(o);var s=t(14),i=Object(s.a)({},(function(){var e=this,o=e._self._c;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"first-major-version-22-0"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#first-major-version-22-0"}},[e._v("#")]),e._v(" First Major Version! (22.0)")]),e._v(" "),o("p",[e._v("Theres only a few things here. First all the shader related config\nstructs now have a "),o("code",[e._v("compilation_options")]),e._v(" field. For now I'm just leaving\nit as "),o("code",[e._v("Default::default()")]),e._v(", but if you have specific compilation\nneeds it's there for you.")]),e._v(" "),o("p",[e._v("The next thing is "),o("code",[e._v("RenderPipelineDescriptor")]),e._v(" and "),o("code",[e._v("ComputePipelineDescriptor")]),e._v("\nnow have a "),o("code",[e._v("cache")]),e._v(" field. This allows you to supply a cache to use during\nshader compilation. This is only really useful for Android devices as most\ndesktop hardware/drivers provide caching. I've left it as "),o("code",[e._v("None")]),e._v(" for now.")]),e._v(" "),o("p",[o("code",[e._v("DeviceDescriptor")]),e._v(" now has a "),o("code",[e._v("memory_hint")]),e._v(" field. You can use this to ask\nthe gpu to prioritize performance, memory usage, or allow you to request\na custom memory block size. These are just hints though and the hardware\nhas the final say in how to do things. I've left this as "),o("code",[e._v("Default::default()")]),e._v("\nfor now.")])])}),[],!1,null,null,null);o.default=i.exports}}]);